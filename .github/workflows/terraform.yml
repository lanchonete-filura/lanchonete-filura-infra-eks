name: Terraform

on:
  push:
    branches: 
      - main
  pull_request:

permissions:
  id-token: write # obrigatório para usar autenticação OIDC
  contents: read # obrigatório para clonar o código do repositório

jobs:
  terraform:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME}}
          role-duration-seconds: ${{ secrets.AWS_ROLE_DURATION_SECONDS }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan with refresh
        if: github.event_name == 'pull_request'
        id: plan_refresh
        run: terraform plan -refresh only

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan
        env:
          TF_LOG: DEBUG

      - name: Terraform Apply
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        run: terraform apply -auto-approve
        env:
          TF_LOG: DEBUG
          
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
